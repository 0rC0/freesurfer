#ifndef _itk_KmeanVtkPolydataFilter_h
#define _itk_KmeanVtkPolydataFilter_h
#include "itkKdTree.h"
#include "itkKdTreeGenerator.h"
#include "itkKdTreeBasedKmeansEstimator.h"
#include "itkListSample.h"
#include "itkArray.h"
#include "itkVector.h"
#include "itkImageKmeansModelEstimator.h"
#include "itkImageRegionIteratorWithIndex.h"
#include "itkImageToListSampleAdaptor.h"
#include "itkDistanceToCentroidMembershipFunction.h"
#include "itkSampleClassifierFilter.h"

#include "itkMeshToMeshFilter.h"

namespace itk
{
  
  template <class TInputMesh, class TOutputMesh>
    class KmeanVtkPolydataFilter :
public ProcessObject
//  public MeshToMeshFilter<TInputMesh, TOutputMesh>
  {
    public: 
    typedef KmeanVtkPolydataFilter       Self;
//    typedef MeshToMeshFilter<TInputMesh, TOutputMesh>       Superclass;
    typedef SmartPointer<Self>                              Pointer;
    typedef SmartPointer<const Self>                        ConstPointer;
    
    itkNewMacro  (Self);
    itkTypeMacro (KmeanVtkPolydataFilter,ProcessObject);
 
       typedef TOutputMesh                         OutputMeshType;
    typedef typename OutputMeshType::MeshTraits OutputMeshTraits;
    typedef typename OutputMeshType::PointType  OutputPointType;
    typedef typename OutputMeshType::PixelType  OutputPixelType;

    
    typedef TInputMesh                         InputMeshType;
    typedef typename InputMeshType::MeshTraits InputMeshTraits;
    typedef typename InputMeshType::PointType  InputPointType;
    typedef typename InputMeshType::PixelType  InputPixelType;
    typedef typename InputMeshType::CellType   InputCellType;
    typedef typename InputMeshType::Pointer   InputMeshPointerType;
    
    /** Some convenient typedefs. */
    typedef typename OutputMeshType::Pointer         OutputMeshPointer;
    typedef typename std::vector<OutputMeshPointer>  ListOfOutputMeshTypePointer;     
    typedef typename OutputMeshType::CellTraits      OutputCellTraits;
    typedef typename OutputMeshType::CellIdentifier  OutputCellIdentifier;
    typedef typename OutputMeshType::CellType        OutputCellType;
    typedef typename OutputMeshType::CellAutoPointer OutputCellAutoPointer;
    typedef typename OutputMeshType::PointIdentifier OutputPointIdentifier;
    typedef typename OutputCellTraits::PointIdIterator     OutputPointIdIterator;
    
    typedef typename OutputMeshType::PointsContainerPointer
      OutputPointsContainerPointer;
    
    typedef typename OutputMeshType::PointsContainer
      OutputPointsContainer;

    typedef typename OutputMeshType::CellsContainer
      OutputCellsContainer;

    typedef typename OutputMeshType::CellsContainerPointer
      OutputCellsContainerPointer;


    typedef PolylineCell<OutputCellType>                      PolylineCellType;
    
    typedef typename InputMeshType::Pointer         InputMeshPointer;
    typedef typename InputMeshType::CellTraits      InputMeshCellTraits;
    typedef typename InputMeshType::CellIdentifier  InputMeshCellIdentifier;
    typedef typename InputMeshType::CellType        InputMeshCellType;
    typedef typename InputMeshType::CellAutoPointer InputMeshCellAutoPointer;
    typedef typename InputMeshType::PointIdentifier InputMeshPointIdentifier;
    typedef typename InputMeshCellTraits::PointIdIterator   InputMeshPointIdIterator;
    
    typedef typename InputMeshType::PointsContainerPointer
      InputPointsContainerPointer;
    
    typedef typename InputMeshType::PointsContainer
      InputPointsContainer;

    typedef typename InputMeshType::CellsContainer
      InputCellsContainer;

    typedef typename InputMeshType::CellsContainerPointer
      InputCellsContainerPointer;

 
    ListOfOutputMeshTypePointer GetOutputs()
    {
      return this->outputs;
    }
   
    void SetNumberOfClusters(int n)
    { this->numberOfClusters = n;}

   int GetNumberOfClusters()
    {
      return this->numberOfClusters;
    }
    std::vector<int> GetLabels()
    { return this->labels;}
    void SetLabels(std::vector<int> labels)
    { this->labels = labels; }

	InputMeshPointerType GetInput()
	{ return this->input; }
	void SetInput(InputMeshPointerType input)
{	this->input = input ; }
//void Update();
	virtual void Update(void);    
  protected:
InputMeshPointerType input;
    std::vector<int> labels;
    ListOfOutputMeshTypePointer outputs;
    int numberOfClusters;
    KmeanVtkPolydataFilter() {}
    ~KmeanVtkPolydataFilter() {}

//    virtual void GenerateData (void);
  private:
    KmeanVtkPolydataFilter (const Self&);
    void operator=(const Self&);    
  };  
}

#ifndef ITK_MANUAL_INSTANTIATION
#include "itkKmeanVtkPolydataFilter.txx"
#endif

#endif


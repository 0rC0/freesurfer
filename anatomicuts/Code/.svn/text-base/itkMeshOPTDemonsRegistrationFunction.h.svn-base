#ifndef _itk_MeshOPTDemonsRegistrationFunction_h_
#define _itk_MeshOPTDemonsRegistrationFunction_h_

#include "itkPDEDeformableRegistrationFunction.h"

#include "itkMeshCorrespondencesCalculatorBase.h"
//#include "itkRBFFastInterpolationVectorImageFilter.h"
#include "itkGaussianExtrapolatorVectorImageFilter.h"
#include "itkVectorContainer.h"
#include "itkWarpMeshFilter2.h"
#include "itkIterativeInverseDeformationFieldImageFilter.h"

namespace itk
{
  
  template < class TFixedMesh,  class TMovingMesh,
             class TFixedImage, class TMovingImage, class TDeformationField>
    class MeshOPTDemonsRegistrationFunction :
  public MeshDemonsRegistrationFunction< TFixedMesh,  TMovingMesh,
              TFixedImage, TMovingImage,  TDeformationField>
  {
  public:
    typedef MeshOPTDemonsRegistrationFunction            Self;
    typedef MeshDemonsRegistrationFunction
      <TFixedMesh,TMovingMesh, TFixedImage, TMovingImage, TDeformationField> Superclass;
    typedef SmartPointer< Self >                      Pointer;
    typedef SmartPointer< const Self >                ConstPointer;

    itkNewMacro  (Self);
    itkTypeMacro (MeshOPTDemonsRegistrationFunction, PDEDeformableRegistrationFunction);

    /** MovingImage image type. */
    typedef typename Superclass::MovingImageType      MovingImageType;
    typedef typename Superclass::MovingImagePointer   MovingImagePointer;
    typedef typename MovingImageType::PixelType       MovingPixelType;

    typedef typename Superclass::NeighborhoodType     NeighborhoodType;
    typedef typename Superclass::FloatOffsetType      FloatOffsetType;
    typedef typename Superclass::PixelType            PixelType;
    typedef typename Superclass::TimeStepType         TimeStepType;
    
    /** FixedImage image type. */
    typedef typename Superclass::FixedImageType       FixedImageType;
    typedef typename Superclass::FixedImagePointer    FixedImagePointer;
    typedef typename FixedImageType::IndexType        IndexType;
    typedef typename FixedImageType::SizeType         SizeType;
    typedef typename FixedImageType::SpacingType      SpacingType;
    typedef typename FixedImageType::DirectionType    DirectionType;

    /** Deformation field type. */
    typedef typename Superclass::DeformationFieldType    DeformationFieldType;
    typedef typename Superclass::DeformationFieldTypePointer
      DeformationFieldTypePointer;
    typedef typename DeformationFieldType::PixelType DeformationVectorType;
    typedef typename DeformationFieldType::PointType DeformationPointType;

    /** Inherit some enums from the superclass. */
    itkStaticConstMacro(ImageDimension, unsigned int,Superclass::ImageDimension);

    /** MovingMesh mesh type */
    typedef TMovingMesh                          MovingMeshType;
    typedef typename MovingMeshType::MeshTraits  MovingMeshTraits;
    typedef typename MovingMeshType::PointType   MovingMeshPointType;
    typedef typename MovingMeshType::PixelType   MovingMeshPixelType;
    typedef typename MovingMeshPointType::VectorType   MovingMeshVectorType;
    typedef typename MovingMeshType::Pointer           MovingMeshPointer;
    typedef typename MovingMeshType::CellTraits        MovingMeshCellTraits;
    typedef typename MovingMeshType::CellIdentifier    MovingMeshCellIdentifier;
    typedef typename MovingMeshType::CellType          MovingMeshCellType;
    typedef typename MovingMeshType::CellAutoPointer   MovingMeshCellAutoPointer;
    typedef typename MovingMeshType::PointIdentifier   MovingMeshPointIdentifier;
    typedef typename MovingMeshCellTraits::PointIdIterator  MovingMeshPointIdIterator;

    /** FixedMesh mesh type */
    typedef TFixedMesh                          FixedMeshType;
    typedef typename FixedMeshType::MeshTraits  FixedMeshTraits;
    typedef typename FixedMeshType::PointType   FixedMeshPointType;
    typedef typename FixedMeshType::PixelType   FixedMeshPixelType;
    typedef typename FixedMeshPointType::VectorType   FixedMeshVectorType;
    typedef typename FixedMeshType::Pointer           FixedMeshPointer;
    typedef typename FixedMeshType::CellTraits        FixedMeshCellTraits;
    typedef typename FixedMeshType::CellIdentifier    FixedMeshCellIdentifier;
    typedef typename FixedMeshType::CellType          FixedMeshCellType;
    typedef typename FixedMeshType::CellAutoPointer   FixedMeshCellAutoPointer;
    typedef typename FixedMeshType::PointIdentifier   FixedMeshPointIdentifier;
    typedef typename FixedMeshCellTraits::PointIdIterator  FixedMeshPointIdIterator;


    /** Correspondences calculator */
    typedef MeshCorrespondencesCalculatorBase <TFixedMesh, TMovingMesh> CorrespondenceCalulatorType;
    typedef typename CorrespondenceCalulatorType::Pointer               CorrespondenceCalulatorPointerType;
    typedef VectorContainer<unsigned int, CorrespondenceCalulatorPointerType>
      CorrespondenceCalulatorVectorType;
    typedef typename CorrespondenceCalulatorType::MetricListType        MetricListType;
    typedef typename CorrespondenceCalulatorType::VectorListType        CorrespondenceVectorListType;
    typedef typename CorrespondenceCalulatorType::PointListType         CorrespondencePointListType;
    typedef VectorContainer<unsigned int, typename MovingMeshType::Pointer>
      MovingMeshVectorContainerType;

    /** Interpolator */
//  typedef RBFFastInterpolationVectorImageFilter <FixedImageType, DeformationFieldType> InterpolatorType;
    typedef itk::GaussianExtrapolatorVectorImageFilter <FixedImageType, DeformationFieldType> InterpolatorType;
    typedef typename InterpolatorType::Pointer                                       InterpolatorPointerType;
    typedef typename InterpolatorType::VectorOfPixelType                             InterpolatorVectorListType;
    typedef typename InterpolatorType::VectorOfPointsType                            InterpolatorPointListType;


    /** Mesh warper */
    typedef WarpMeshFilter<TMovingMesh, TMovingMesh, TDeformationField> WarpFilterType;

    /** Deformation field inverter */
    typedef IterativeInverseDeformationFieldImageFilter<TDeformationField, TDeformationField>
      InvertionFilterType;

    
    /** Set the object's state before each iteration. */
    virtual void InitializeIteration();
    
    /** This method is called by a finite difference solver image filter at
     * each pixel that does not lie on a data set boundary */
    virtual PixelType  ComputeUpdate(const NeighborhoodType &neighborhood,
				     void *globalData,
				     const FloatOffsetType &offset = FloatOffsetType(0.0))
    {
    return     Superclass::ComputeUpdate(neighborhood, globalData, offset);
    }

      protected:
    MeshOPTDemonsRegistrationFunction():Superclass()
    {
      std::cout << " New Mesh OPT Demons Function " << std::endl;
/*      m_CorrespondenceCalculatorVector = CorrespondenceCalulatorVectorType::New();
      m_MovingMeshVector = MovingMeshVectorContainerType::New();
      m_Inverter = InvertionFilterType::New();
      m_Interpolator = InterpolatorType::New();
      m_MeshForces = 0;
      m_Normalizer = 0.0;
      m_TimeStep = 1.0;
      m_Metric = NumericTraits<double>::max();
      m_NumberOfPointsProcessed = 0L;
      m_RMSChange = NumericTraits<double>::max();
      m_Sigma = -1;
      m_SigmaI = 0;
      m_SigmaX = 0;
      m_LambdaGradientDescent=1;*/
    }
    ~MeshOPTDemonsRegistrationFunction() {}
    
    void PrintSelf(std::ostream& os, Indent indent) const
    {
        Superclass::PrintSelf(os, indent);
    }
    
    /** A global data type for this class of equation. Used to store
     * iterators for the fixed image. */
    /*
    struct GlobalDataStruct
    {
      double          m_SumOfSquaredDifference;
      unsigned long   m_NumberOfPointsProcessed;
      double          m_SumOfSquaredChange;
    };
    */
   
  private:
    MeshOPTDemonsRegistrationFunction (const Self&);
    void operator=(const Self&);
    /*
    typename CorrespondenceCalulatorVectorType::Pointer m_CorrespondenceCalculatorVector;

    typename DeformationFieldType::Pointer m_MeshForces;

    typename InvertionFilterType::Pointer m_Inverter;

    typename MovingMeshVectorContainerType::Pointer m_MovingMeshVector;

    InterpolatorPointerType m_Interpolator;

    std::vector<InterpolatorPointListType>  m_CorrespondencePositions;
    std::vector<InterpolatorVectorListType> m_CorrespondenceVectors;
    
    double       m_Normalizer;
    double       m_MaximumUpdateStepLength;
    TimeStepType m_TimeStep;
    */
    /** The metric value is the mean square difference in intensity between
     * the fixed image and transforming moving image computed over the
     * the overlapping region between the two images. */
/*    double                  m_Metric;
    unsigned long           m_NumberOfPointsProcessed;
    double                  m_RMSChange;
    double                  m_Sigma;
    double                  m_SigmaI;
    double                  m_SigmaX;
    double                  m_LambdaGradientDescent;
    DeformationFieldTypePointer m_inverseDeformationField;*/
  };
    
} // end of namespace

#ifndef ITK_MANUAL_INSTANTIATION
#include "itkMeshOPTDemonsRegistrationFunction.txx"
#endif

#endif

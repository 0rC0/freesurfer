#ifndef _itk_AppendBundleFilter_h_
#define _itk_AppendBundleFilter_h_
#include <vtkSmartPointer.h>
#include <vtkPolyData.h>
#include <iostream>

#include "itkObject.h"

namespace itk
{

    class AppendBundleFilter :  public Object
  {
  public:
    typedef AppendBundleFilter Self;
    typedef Object                                          Superclass;
    typedef SmartPointer<Self>                              Pointer;
    typedef SmartPointer<const Self>                        ConstPointer;

    itkNewMacro  (Self);
    itkTypeMacro (AppendBundleFilter, Object);

    void SetInput(std::vector<vtkPolyData*> list)
    {
       this->bundleList = list;
    }
    vtkPolyData* GetOutput(){ return this->allBundles; }
    void Update();
  protected:

      AppendBundleFilter(){}
    ~AppendBundleFilter() {};
    
  private:
    
    vtkSmartPointer<vtkPolyData>  allBundles;
    std::vector<vtkPolyData* > bundleList;
  };
  
}

#ifndef ITK_MANUAL_INSTANTIATION
#include "itkAppendBundleFilter.txx"
#endif

#endif

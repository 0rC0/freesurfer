#!/bin/csh -f
# mask
# cesvar, cespct
# 
set VERSION = '$Id: isxconcat-sess,v 1.2 2006/11/28 06:33:12 greve Exp $'

set inputargs = ($argv);

set analysis = ();
set contrast = ();
set hemi = ();
set outvol = ();
set tmpdir = ();
set subject = fsaverage;

set fwhm = 0;
set projfrac = 0;
set paireddiff = 0;
set DoPct = 0;
set DoMorph = 0;

set PrintHelp = 0;

if($#argv == 0)  goto usage_exit;
set n = `echo $argv | grep version | wc -l` 
if($n != 0) then
  echo $VERSION
  exit 0;
endif
set n = `echo $argv | grep -e -help | wc -l` 
if($n != 0) then
  set PrintHelp = 1;  
  goto usage_exit;
endif

set SessList = `getsesspath $inputargs`;
if($status || $#SessList == 0) then
  echo "ERROR: finding sessions"
  echo "       $SessList" 
  exit 1;
endif

goto parse_args;
parse_args_return:

goto check_params;
check_params_return:

## Get functional subdirectory from the info file ##
set infofile = $analysis/analysis.info
if(! -e $infofile) then
  echo "ERROR: cannot find $infofile" 
  exit 1;
endif
set fsd = `cat $infofile | awk '{if($1 == "fsd") print $2}'`;

##### Create a log file ######
set LF = $outvol.log
if(-e $LF) mv $LF $LF.old
echo $LF

echo "isxconcat-sess log file" >> $LF
echo $VERSION >> $LF
id            >> $LF
pwd           >> $LF
echo $0     >> $LF
echo $inputargs  >> $LF
uname -a      >> $LF
date          >> $LF

set StartTime = `date`;
set ceslist = ();
foreach sess ($SessList)
  set sessid = `basename $sess`;
  set sessinfo = $sess/session.info
  if(-e $sessinfo) then
    set IsGroup = `grep GroupAverage $sessinfo | wc -l`;
  else
    set IsGroup = 0;
  endif
  if($IsGroup) then
    echo "ERROR: session `basename $sess` is a group analysis."|& tee -a $LF
    echo "This is not allowed with isxconcat-sess."|& tee -a $LF
    exit 1;
  endif

  set reg = $sess/$fsd/register.dat
  if(! -e $reg) then
    echo "ERROR: cannot find $reg"|& tee -a $LF
    exit 1;
  endif

  set condir = $sess/$fsd/$analysis/$contrast
  if(! -e $condir) then
    echo "ERROR: cannot find $condir"|& tee -a $LF
    exit 1;
  endif

  set cesstem = $condir/ces
  set ext = `fast_getext $cesstem`
  if($status) then
    echo "$ext"|& tee -a $LF
    exit 1;
  endif
  set ces = $cesstem.$ext

  if($#hemi != 0) then
    set cesout = $tmpdir/$sessid-$hemi-$analysis-$contrast.mgh
    set cmd = (mri_vol2surf --mov $ces --reg $reg --trgsubject $subject)
    set cmd = ($cmd --hemi $hemi --projfrac 0 --interp tli --noreshape)
    set cmd = ($cmd --o $cesout)
  else
    set cesout = $tmpdir/$sessid-tal-$analysis-$contrast.mgh
    set cmd = (mri_vol2vol --mov $ces --reg $reg --tal --talres 2)
    set cmd = ($cmd --o $cesout --no-save-reg)
    #set cmd = ($cmd --morph)
  endif
  echo "------------------------------------" |& tee -a $LF
  pwd |& tee -a $LF
  echo $cmd |& tee -a $LF
  $cmd |& tee -a $LF
  if($status) exit 1;
  set ceslist = ($ceslist $cesout);

end # Loop over sessions

echo "------------------------------------" |& tee -a $LF
set cmd = (mri_concat $ceslist --o $outvol)
pwd |& tee -a $LF
echo $cmd |& tee -a $LF
$cmd |& tee -a $LF
if($status) exit 1;


echo "" | tee -a $LF
echo "" | tee -a $LF
echo "Started at $StartTime" | tee -a $LF
echo "Ended   at `date`"     | tee -a $LF
echo "isxconcat-sess completed" | tee -a $LF
echo " "
echo " "

exit 0;
###############################################

############--------------##################
parse_args:
set cmdline = ($argv);
while( $#argv != 0 )

  set flag = $argv[1]; shift;
  
  switch($flag)

    case "-o":
      if($#argv == 0) goto arg1err;
      set outvol = $argv[1]; shift;
      breaksw

    case "-hemi":
      if ( $#argv == 0) goto arg1err;
      set hemi = ($hemi $argv[1]); shift;
      breaksw

    case "-a":
    case "-analysis":
      if ( $#argv == 0) goto arg1err;
      set analysis = $argv[1]; shift;
      breaksw

    case "-c":
    case "-contrast":
      if ( $#argv == 0) goto arg1err;
      set contrast = $argv[1]; shift;
      breaksw

    case "-tmpdir":
      if ( $#argv == 0) goto arg1err;
      set tmpdir = $argv[1]; shift;
      breaksw

    case "-nopct":
      set DoPct = 0;
      breaksw

    case "-debug":
      set verbose = 1;
      set echo = 1;
      breaksw

    case "-cwd":
      breaksw

    case "-g":
    case "-s":
    case "-sf":
    case "-df":
    case "-d":
      # ignore getsesspath arguments 
      shift;
      breaksw

    default:
      echo ERROR: Flag $flag unrecognized. 
      echo $cmdline
      exit 1
      breaksw
  endsw

end

goto parse_args_return;
############--------------##################

############--------------##################
check_params:

  set errs = 0;

  if($#analysis == 0) then
    echo "ERROR: no analysis specified"
    exit 1;
  endif

  if($#contrast == 0) then
    echo "ERROR: no contrast specified"
    exit 1;
  endif

  if($#outvol == 0) then
    echo "ERROR: no output  specified"
    exit 1;
  endif

  set outdir = `dirname $outvol`;
  mkdir -p $outdir
  if($status) then
    echo "ERROR: making $outdir";
    exit 1;
  endif

  if($#tmpdir == 0) set tmpdir = $outdir/tmp-isxconcat-sess
  mkdir -p $tmpdir


goto check_params_return;
############--------------##################

############--------------##################
arg1err:
  echo "ERROR: flag $flag requires one argument"
  exit 1
############--------------##################

############--------------##################
usage_exit:
  echo " "
  echo "USAGE: isxconcat-sess"
  echo ""
  echo "   -a analysisname : session-level functional analysis name"
  echo "   -c  contrast : contrasts"
  echo "   -hemi     hemisphere   : with sph space <lh rh>";
  echo "   -o outvol"
  echo ""
  echo "   -sf sessidfile  ..."
  echo "   -df srchdirfile ..."
  echo "   -s  sessid      ..."
  echo "   -d  srchdir     ..."
  echo ""
  echo "   -help"
  echo "   -version       : print version and exit"
  echo " "

  if(! $PrintHelp ) exit 1;

  echo " "
  echo "$VERSION "
  echo " "

  cat $0 | awk 'BEGIN{prt=0}{if(prt) print $0; if($1 == "BEGINHELP") prt = 1 }'
exit 1;

#---- Everything below here is printed out as part of help -----#
BEGINHELP


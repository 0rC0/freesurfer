// generated by Fast Light User Interface Designer (fluid) version 1.0110

#include "kvlSegmentationEvaluationConsoleGUI.h"

void kvlSegmentationEvaluationConsoleGUI::cb_m_Window_i(Fl_Double_Window*, void*) {
  exit( 0 );
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_Window(Fl_Double_Window* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->user_data()))->cb_m_Window_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ImageViewer1_i(kvl::ImageViewer*, void*) {
  //this->SelectTriangleContainingPoint( Fl::event_x(), m_ImageViewer->h() - Fl::event_y() );
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ImageViewer1(kvl::ImageViewer* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_ImageViewer1_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ImageViewer2_i(kvl::ImageViewer*, void*) {
  //this->SelectTriangleContainingPoint( Fl::event_x(), m_ImageViewer->h() - Fl::event_y() );
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ImageViewer2(kvl::ImageViewer* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ImageViewer2_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_OverlayOpacity_i(Fl_Value_Slider*, void*) {
  this->SetOverlayOpacity( m_OverlayOpacity->value() );
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_OverlayOpacity(Fl_Value_Slider* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_OverlayOpacity_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_CoronalSliceNumber_i(Fl_Value_Slider*, void*) {
  this->SetSliceLocation( 
  static_cast< unsigned int >( m_SagittalSliceNumber->value() ),
  static_cast< unsigned int >( m_CoronalSliceNumber->value() ),
  static_cast< unsigned int >( m_AxialSliceNumber->value() ) );
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_CoronalSliceNumber(Fl_Value_Slider* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_CoronalSliceNumber_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_SagittalSliceNumber_i(Fl_Value_Slider*, void*) {
  m_CoronalSliceNumber->do_callback();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_SagittalSliceNumber(Fl_Value_Slider* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_SagittalSliceNumber_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_AxialSliceNumber_i(Fl_Value_Slider*, void*) {
  m_CoronalSliceNumber->do_callback();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_AxialSliceNumber(Fl_Value_Slider* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_AxialSliceNumber_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewOne_i(Fl_Round_Button*, void*) {
  this->ShowSelectedView();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewOne(Fl_Round_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ViewOne_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewTwo_i(Fl_Round_Button*, void*) {
  this->ShowSelectedView();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewTwo(Fl_Round_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ViewTwo_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewFour_i(Fl_Round_Button*, void*) {
  this->ShowSelectedView();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewFour(Fl_Round_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ViewFour_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewThree_i(Fl_Round_Button*, void*) {
  this->ShowSelectedView();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewThree(Fl_Round_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ViewThree_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewFive_i(Fl_Round_Button*, void*) {
  this->ShowSelectedView();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_ViewFive(Fl_Round_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_m_ViewFive_i(o,v);
}

void kvlSegmentationEvaluationConsoleGUI::cb_m_Swap_i(Fl_Check_Button*, void*) {
  this->Swap();
}
void kvlSegmentationEvaluationConsoleGUI::cb_m_Swap(Fl_Check_Button* o, void* v) {
  ((kvlSegmentationEvaluationConsoleGUI*)(o->parent()->user_data()))->cb_m_Swap_i(o,v);
}

kvlSegmentationEvaluationConsoleGUI::kvlSegmentationEvaluationConsoleGUI() {
  { m_Window = new Fl_Double_Window(1910, 1140, "kvlSegmentationEvaluationConsole");
    m_Window->callback((Fl_Callback*)cb_m_Window, (void*)(this));
    { m_ImageViewer1 = new kvl::ImageViewer(3, 5, 950, 950);
      m_ImageViewer1->box(FL_FLAT_BOX);
      m_ImageViewer1->color((Fl_Color)FL_FOREGROUND_COLOR);
      m_ImageViewer1->selection_color((Fl_Color)FL_BACKGROUND_COLOR);
      m_ImageViewer1->labeltype(FL_NORMAL_LABEL);
      m_ImageViewer1->labelfont(0);
      m_ImageViewer1->labelsize(14);
      m_ImageViewer1->labelcolor((Fl_Color)FL_FOREGROUND_COLOR);
      m_ImageViewer1->callback((Fl_Callback*)cb_m_ImageViewer1);
      m_ImageViewer1->align(FL_ALIGN_TOP);
      m_ImageViewer1->when(FL_WHEN_RELEASE);
      { m_ImageViewer2 = new kvl::ImageViewer(956, 5, 950, 950);
        m_ImageViewer2->box(FL_FLAT_BOX);
        m_ImageViewer2->color((Fl_Color)FL_FOREGROUND_COLOR);
        m_ImageViewer2->selection_color((Fl_Color)FL_BACKGROUND_COLOR);
        m_ImageViewer2->labeltype(FL_NORMAL_LABEL);
        m_ImageViewer2->labelfont(0);
        m_ImageViewer2->labelsize(14);
        m_ImageViewer2->labelcolor((Fl_Color)FL_FOREGROUND_COLOR);
        m_ImageViewer2->callback((Fl_Callback*)cb_m_ImageViewer2);
        m_ImageViewer2->align(FL_ALIGN_TOP);
        m_ImageViewer2->when(FL_WHEN_RELEASE);
        m_ImageViewer2->end();
      } // kvl::ImageViewer* m_ImageViewer2
      m_ImageViewer1->end();
    } // kvl::ImageViewer* m_ImageViewer1
    { m_OverlayOpacity = new Fl_Value_Slider(450, 1029, 175, 25, "Overlay opacity:");
      m_OverlayOpacity->type(1);
      m_OverlayOpacity->textsize(14);
      m_OverlayOpacity->callback((Fl_Callback*)cb_m_OverlayOpacity);
      m_OverlayOpacity->align(FL_ALIGN_TOP);
    } // Fl_Value_Slider* m_OverlayOpacity
    { m_CoronalSliceNumber = new Fl_Value_Slider(832, 992, 175, 25, "Coronal slice number:");
      m_CoronalSliceNumber->type(1);
      m_CoronalSliceNumber->step(1);
      m_CoronalSliceNumber->textsize(14);
      m_CoronalSliceNumber->callback((Fl_Callback*)cb_m_CoronalSliceNumber);
      m_CoronalSliceNumber->align(FL_ALIGN_LEFT);
    } // Fl_Value_Slider* m_CoronalSliceNumber
    { m_SagittalSliceNumber = new Fl_Value_Slider(832, 1027, 175, 25, "Sagittal slice number:");
      m_SagittalSliceNumber->type(1);
      m_SagittalSliceNumber->step(1);
      m_SagittalSliceNumber->textsize(14);
      m_SagittalSliceNumber->callback((Fl_Callback*)cb_m_SagittalSliceNumber);
      m_SagittalSliceNumber->align(FL_ALIGN_LEFT);
    } // Fl_Value_Slider* m_SagittalSliceNumber
    { m_AxialSliceNumber = new Fl_Value_Slider(832, 1064, 175, 25, "Axial slice number:");
      m_AxialSliceNumber->type(1);
      m_AxialSliceNumber->step(1);
      m_AxialSliceNumber->textsize(14);
      m_AxialSliceNumber->callback((Fl_Callback*)cb_m_AxialSliceNumber);
      m_AxialSliceNumber->align(FL_ALIGN_LEFT);
    } // Fl_Value_Slider* m_AxialSliceNumber
    { Fl_Group* o = new Fl_Group(1165, 991, 124, 109, "View:");
      o->box(FL_DOWN_BOX);
      o->align(FL_ALIGN_LEFT);
      { m_ViewOne = new Fl_Round_Button(1175, 998, 29, 29);
        m_ViewOne->type(102);
        m_ViewOne->down_box(FL_ROUND_DOWN_BOX);
        m_ViewOne->callback((Fl_Callback*)cb_m_ViewOne);
        m_ViewOne->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      } // Fl_Round_Button* m_ViewOne
      { m_ViewTwo = new Fl_Round_Button(1255, 997, 27, 28);
        m_ViewTwo->type(102);
        m_ViewTwo->down_box(FL_ROUND_DOWN_BOX);
        m_ViewTwo->callback((Fl_Callback*)cb_m_ViewTwo);
      } // Fl_Round_Button* m_ViewTwo
      { m_ViewFour = new Fl_Round_Button(1255, 1063, 25, 29);
        m_ViewFour->type(102);
        m_ViewFour->down_box(FL_ROUND_DOWN_BOX);
        m_ViewFour->callback((Fl_Callback*)cb_m_ViewFour);
      } // Fl_Round_Button* m_ViewFour
      { m_ViewThree = new Fl_Round_Button(1175, 1066, 24, 21);
        m_ViewThree->type(102);
        m_ViewThree->down_box(FL_ROUND_DOWN_BOX);
        m_ViewThree->callback((Fl_Callback*)cb_m_ViewThree);
      } // Fl_Round_Button* m_ViewThree
      { m_ViewFive = new Fl_Round_Button(1210, 1030, 30, 27);
        m_ViewFive->type(102);
        m_ViewFive->down_box(FL_ROUND_DOWN_BOX);
        m_ViewFive->value(1);
        m_ViewFive->callback((Fl_Callback*)cb_m_ViewFive);
      } // Fl_Round_Button* m_ViewFive
      o->end();
    } // Fl_Group* o
    { m_Swap = new Fl_Check_Button(1540, 1040, 64, 25, "Swap:");
      m_Swap->down_box(FL_DOWN_BOX);
      m_Swap->callback((Fl_Callback*)cb_m_Swap);
      m_Swap->align(FL_ALIGN_LEFT);
    } // Fl_Check_Button* m_Swap
    m_Window->end();
  } // Fl_Double_Window* m_Window
}

kvlSegmentationEvaluationConsoleGUI::~kvlSegmentationEvaluationConsoleGUI() {
}

void kvlSegmentationEvaluationConsoleGUI::SetOverlayOpacity( float overlayOpacity ) {
}

void kvlSegmentationEvaluationConsoleGUI::SetSliceLocation( unsigned int, unsigned int, unsigned int ) {
}

void kvlSegmentationEvaluationConsoleGUI::ShowSelectedView() {
}

void kvlSegmentationEvaluationConsoleGUI::Swap() {
}

# configure.in
# by y.tosa
# June 17, 2004
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
#
AC_PREREQ(2.57)
AC_INIT(Freesurfer, 0.1, tosa@nmr.mgh.harvard.edu)
AC_CONFIG_AUX_DIR(config)
AC_PROG_LIBTOOL
# create specifal dir for intermediate files
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(Freesurfer, 0.1)
AC_CONFIG_SRCDIR([config.h.in])
AM_CONFIG_HEADER([config.h])

# Checks for programs.
AC_PROG_AWK
AC_PROG_CXX
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_CPP

################################################################
# define OS
################################################################
# examples are:
# SUSE9.0:   host = x86_64-suse-linux          uname -p: x86_64
# RedHat9.0: host = i686-pc-linux-gnu          uname -p: i686
# MacOSX10 : host = powerpc-apple-darwin6.8    uname -p: powerpc
#################################################################
AC_MSG_NOTICE(Setitng OS from host ...)
case "${host}" in
 i*86-*-linux-gnu*)
 OS=Linux
 OS_CPPFLAGS="-Wall -fwritable-strings"
## choose static version if shared and static present
 OS_LDFLAGS="-all-static"
 ;;
 *-apple-darwin*)
 OS=Darwin
 OS_CPPFLAGS=
 OS_LDFLAGS=
 AC_ARG_WITH([apple-opengl-framework],
               [Use Apple OpenGL/GLUT framework (Aqua)],[],[])
 ;;
 x86_64-*linux*)
 OS=Linux64
 OS_CPP_FLAGS="-Wall -fwritable-strings"
 AC_ARG_ENABLE([lib64],
               [Use lib64 for libraries],[],[])
 ;; 
esac
AC_SUBST(OS)
AC_SUBST(OS_CPPFLAGS)
AC_SUBST(OS_LDFLAGS)

##############################################################
# cpu optimization
##############################################################
if test "${CC}" = "gcc"; then 
AC_MSG_NOTICE(Setting CPU optimization ...)
CPUFLAGS=""
AC_MSG_CHECKING(checking for CPU ...)
#### 
#### cpu type: we support 
####     pentium3, pentium4,  
####     athlon-xp, opteron, athlon64, athlon-fx
####      
AC_ARG_WITH(cpu,
  [  --with-cpu=CPUTYPE      where CPUTYPE is pentium3, pentium4, athlon-xp ....],
  [  
    case "$withval" in 
     pentium3) 
     CPUFLAGS="-march=pentium3 -mfpmath=sse"
     ;;
     pentium4)
     CPUFLAGS="-march=pentium4 -mfpmath=sse"
     ;;
     athlon-xp)
     CPUFLGAS="-march=athlon-xp -mfpmath=sse"
     ;;	
     opteron)
     CPUFLAGS="-march=opteron -mfpmath=sse"
     ;;
     athlon64)
     CPUFLAGS="-march=athlon64 -mfpmath=sse"
     ;;
     athlon-fx)
     CPUFLAGS="-march=athlon-fx -mfpmath=sse"
     ;;
     *)
     echo "cpu optimization not set"
     ;;
    esac
  ],
  [ echo "cpu option not set" ]
  )
found=$CPUFLAGS 
# set the value
CFLAGS="$CPUFLAGS $CFLAGS"
AC_MSG_RESULT($found)
# if gcc
fi
##############################################################
# mgh put packages and create softlinks
# default path for mni tools
##############################################################
# get the path for X includes and X libraries
AC_PATH_X
ACX_PTHREAD

AC_MSG_NOTICE(Checking directories for MNI Tcl/Tk BLT Tiff Jpeg ...)
mghdir=/usr/pubsw/packages
#############################################################
# MNI
#############################################################
ac_mni_includes=NO 
ac_mni_libraries=NO 
ac_mni_bindir=NO
mni_libraries=""
mni_includes=""
AC_MSG_CHECKING(cheking MNI directory)
# default is to use MGH installation
if test -d $mghdir/mni/current ; then
  ac_mni_includes=$mghdir/mni/current/include
  ac_mni_libraries=$mghdir/mni/current/lib
  ac_mni_bin=$mghdir/mni/current/bin
fi
# modify when --with-mni-dir option given
################################################################
AC_ARG_WITH(mni-dir,
  [  --with-mni-dir=DIR      where the root of MNI is installed.],
  [  ac_mni_includes="$withval"/include
     ac_mni_libraries="$withval"/lib
     ac_mni_bindir="$withval"/bin
  ])

# modify CXXFLAGS and LDFLAGS
if test ! "$ac_mni_includes" = "NO"; then
  AC_MSG_RESULT(yes)
  mni_includes=-I$ac_mni_includes
  CPPFLAGS="$CPPFLAGS $mni_includes"
else
  AC_MSG_RESULT(no)
fi
if test ! "$ac_mni_libraries" = "NO"; then 
  mni_libraries=-L$ac_mni_libraries 
  LDFLAGS="$LDFLAGS $mni_libraries"
fi

AC_SUBST(mni_includes)
AC_SUBST(mni_libraries)

###############################################################
# Tcl/Tk
###############################################################
ac_tcl_includes="NO"
ac_tcl_libraries="NO"
ac_tcl_bindir="NO"
tcl_includes=""
tcl_libraries=""
AC_MSG_CHECKING(cheking Tcl/Tk directory)
# default is to use MGH installation
if test -d $mghdir/tcl/current ; then
  ac_tcl_includes=$mghdir/tcl/current/include
  ac_tcl_libraries=$mghdir/tcl/current/lib
  ac_tcl_bindir=$mghdir/tcl/current/bin
fi

AC_ARG_WITH(tcl-dir,
  [  --with-tcl-dir=DIR      where the root of Tcl/Tk is installed.],
  [  ac_tcl_includes="$withval"/include
     ac_tcl_libraries="$withval"/lib
     ac_tcl_bindir="$withval"/bin
  ])

# modify CXXFLAGS and LDFLAGS
if test ! "$ac_tcl_includes" = "NO"; then
  AC_MSG_RESULT(yes)
  tcl_includes=-I$ac_tcl_includes
  CPPFLAGS="$CPPFLAGS $tcl_includes"
else
  AC_MSG_RESULT(no)
fi
if test ! "$ac_tcl_libraries" = "NO"; then 
  tcl_libraries=-L$ac_tcl_libraries 
  LDFLAGS="$LDFLAGS $tcl_libraries"
fi

AC_SUBST(tcl_includes)
AC_SUBST(tcl_libraries)

################################################################
# BLT
################################################################
ac_blt_includes="NO"
ac_blt_libraries="NO"
ac_blt_bindir="NO"
blt_includes=""
blt_libraries=""
AC_MSG_CHECKING(cheking BLT directory)
# default is to use MGH installation
# MGH installs BLT in tcl directory
if test -d $mghdir/tcl/current ; then
  ac_blt_includes=$mghdir/tcl/current/include
  ac_blt_libraries=$mghdir/tcl/current/lib
  ac_blt_bindir=$mghdir/tcl/current/bin
fi

AC_ARG_WITH(BLT-dir,
  [  --with-blt-dir=DIR      where the root of Blt/Tk is installed.],
  [  ac_blt_includes="$withval"/include
     ac_blt_libraries="$withval"/lib
     ac_blt_bindir="$withval"/bin
  ])

# modify CXXFLAGS and LDFLAGS
if test ! "$ac_blt_includes" = "NO"; then
  AC_MSG_RESULT(yes)
  blt_includes=-I$ac_blt_includes
  CPPFLAGS="$CPPFLAGS $blt_includes"
else
  AC_MSG_RESULT(no)
fi
if test ! "$ac_blt_libraries" = "NO"; then
  blt_libraries=-L$ac_blt_libraries 
  LDFLAGS="$LDFLAGS $blt_libraries"
fi

AC_SUBST(blt_includes)
AC_SUBST(blt_libraries)

################################################################
# tiff   Mac does not have this
################################################################
ac_tiff_includes="NO"
ac_tiff_libraries="NO"
ac_tiff_bindir="NO"
tiff_includes=""
tiff_libraries=""
AC_MSG_CHECKING(cheking Tiff directory)
# default is to use MGH installation
if test -d $mghdir/tiff/current ; then
  ac_tiff_includes=$mghdir/tiff/current/include
  ac_tiff_libraries=$mghdir/tiff/current/lib
  ac_tiff_bindir=$mghdir/tiff/current/bin
fi

AC_ARG_WITH(tiff-dir,
  [  --with-tiff-dir=DIR     where the root of Tiff is installed.],
  [  ac_tiff_includes="$withval"/include
     ac_tiff_libraries="$withval"/lib
     ac_tiff_bindir="$withval"/bin
  ])

# modify CXXFLAGS and LDFLAGS
if test ! "$ac_tiff_includes" = "NO"; then
  AC_MSG_RESULT(yes)
  tiff_includes=-I$ac_tiff_includes
  CPPFLAGS="$CPPFLAGS $tiff_includes"
else
  AC_MSG_RESULT(no)
fi
if test ! "$ac_tiff_libraries" = "NO"; then 
  tiff_libraries=-L$ac_tiff_libraries 
  LDFLAGS="$LDFLAGS $tiff_libraries"
fi

################################################################
# jpeg   Mac does not have this
################################################################
ac_jpeg_includes="NO"
ac_jpeg_libraries="NO"
ac_jpeg_bindir="NO"
jpeg_includes=""
jpeg_libraries=""
AC_MSG_CHECKING(cheking Jpeg directory)
# default is to use MGH installation
if test -d $mghdir/jpeg/current ; then
  ac_jpeg_includes=$mghdir/jpeg/current/include
  ac_jpeg_libraries=$mghdir/jpeg/current/lib
  ac_jpeg_bindir=$mghdir/jpeg/current/bin
fi

AC_ARG_WITH(jpeg-dir,
  [  --with-jpeg-dir=DIR     where the root of Jpeg is installed.],
  [  ac_jpeg_includes="$withval"/include
     ac_jpeg_libraries="$withval"/lib
     ac_jpeg_bindir="$withval"/bin
  ])

# modify CXXFLAGS and LDFLAGS
if test ! "$ac_jpeg_includes" = "NO"; then
  AC_MSG_RESULT(yes)
  jpeg_includes=-I$ac_jpeg_includes
  CPPFLAGS="$CPPFLAGS $jpeg_includes"
else
  AC_MSG_RESULT(no)
fi
if test ! "$ac_jpeg_libraries" = "NO"; then 
  jpeg_libraries=-L$ac_jpeg_libraries 
  LDFLAGS="$LDFLAGS $jpeg_libraries"
fi

# generic mods
CPPFLAGS="$CPPFLAGS -D$OS -DANSI $OS_CPPFLAGS"

AC_MSG_NOTICE(Get OpenGL info ...)
#####################################################
# OpenGL
#####################################################
AX_CHECK_GLUT
#####################################################
# produces GLUT_CFLAGS GLUT_LIBS
LIBS_TCL_OPENGL="$GLUT_LIBS -lBLT -ltix -ltk -ltcl"
AC_SUBST(LIBS_TCL_OPENGL)

LIBDIRS_MGH="utils rgb unix dicom hipsstubs"
AC_SUBST(LIBDIRS_MGH)

LIBS_MGH="utils/libutils.a rgb/librgb.a unix/libunix.a dicom/libdicom.a hipsstubs/libhipsstubs.a"
AC_SUBST(LIBS_MGH)

#####################################################
# Checks for libraries.
# the order is important
#####################################################
AC_MSG_NOTICE(Making sure that all libraries can be compilable ...)
AC_CHECK_LIB([m], [floor])
AC_CHECK_LIB([z], [gzopen])
AC_CHECK_LIB([crypt], [crypt])
AC_CHECK_LIB([tiff], [main])
AC_CHECK_LIB([jpeg], [jpeg_start_compress])
# three mni libs
AC_CHECK_LIB([netcdf], [nccreate],[],
  [AC_MSG_ERROR("FATAL:netcdf lib not found.  Set LDFLAGS or --with-mni-dir.")] )
AC_CHECK_LIB([minc], [main], [],
  [AC_MSG_ERROR("FATAL:minc lib not found.  Set LDFLAGS or --with-mni-dir.")] )
AC_CHECK_LIB([volume_io], [transform_point],[],
  [AC_MSG_ERROR("FATAL:volume_io lib not found.  Set LDFLAGS or --with-mni-dir.")] )
# the entire libs here is passed as LIBS
# thus save the current one
ac_save_libs=$LIBS
ac_save_cppflags=$CPPFLAGS
ac_save_ldflags=$LDFLAGS
## check Tcl/Tk/BLT
AC_CHECK_LIB([tcl],[Tcl_Init],[],
  [AC_MSG_ERROR("FATAL: libtcl not found. check config.log. set LDFLAGS or --with-tcl-dir.")] )
# tk needs X for compilation
if test ! "$OS" = "Darwin"; then
AC_CHECK_LIB([tk],[Tk_Init],[],
  [AC_MSG_ERROR("FATAL: libtk not found.  check config.log. set LDFLAGS or --with-tcl-dir.")] )
AC_CHECK_LIB([tix],[Tix_Init],[],
  [AC_MSG_ERROR("FATAL: libtix not found. check config.log. set LDFLAGS or --with-tcl-dir.")] )
else
LIBS="-lX11 $LIBS"
CPPFLAGS="$GLUT_CFLAGS $CPPFLAGS"
LDFLAGS="-L$x_libraries $LDFLAGS"
AC_CHECK_LIB([tk8.3],[Tk_Init],[],
  [AC_MSG_ERROR("FATAL: libtk not found.  check config.log. set LDFLAGS or --with-tcl-dir.")] )
AC_CHECK_LIB([tix4.1.8.3],[Tix_Init],[],
  [AC_MSG_ERROR("FATAL: libtix not found.  check config.log. Set LDFLAGS or --with-tcl-dir.")] )
fi

AC_CHECK_LIB([BLT],[Blt_Init],[],
  [AC_MSG_ERROR("FATAL: libBLT not found. check config.log.  Set LDFLAGS or --with-BLT-dir.")] )
# recover previous one without X and Tcl
LIBS=$ac_save_libs
CPPFLAGS=$ac_save_cppflags
LDFLAGS=$ac_save_ldflags


###########################################################################################
# Checks for header files.
############################################################################################
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([arpa/inet.h fcntl.h float.h limits.h locale.h malloc.h memory.h netdb.h netinet/in.h stddef.h stdlib.h string.h strings.h sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h sys/timeb.h unistd.h values.h wctype.h])
# the following is needed on darwin
AC_CHECK_HEADERS(sys/types.h stdint.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_CHECK_TYPES([ptrdiff_t])

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_ERROR_AT_LINE
AC_FUNC_LSTAT
AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
AC_FUNC_MALLOC
AC_FUNC_MMAP
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRTOD
AC_FUNC_VPRINTF
# freesurfer uses calloc, getenv often so added
AC_CHECK_FUNCS([bzero calloc floor ftime getenv getcwd getpagesize gettimeofday memmove memset mkdir munmap pow putenv rint select setenv sqrt strcasecmp strchr strdup strerror strncasecmp strrchr strspn strstr strtol uname])

###############################################################################
# output
###############################################################################
AC_OUTPUT(Makefile \
		   unix/Makefile dicom/Makefile rgb/Makefile utils/Makefile hipsstubs/Makefile \
		   mri_convert/Makefile tkmedit/Makefile)

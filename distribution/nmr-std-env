#############################################################################
# Name:    nmr-std-env
# Purpose: sets up the environment to run the MGH-NMR standard MRI processing
#          stream: unpacking, functional, structural, and visualization.
# Usage:   source nmr-std-env
#
# $Id: nmr-std-env,v 1.2 2005/01/07 22:12:40 kteich Exp $
#
# NOTE: this file is under version control. Make sure to use the
# proper check-out/check-in procedures when modifying it!
#############################################################################

set NSE_VERSION = '$Id: nmr-std-env,v 1.2 2005/01/07 22:12:40 kteich Exp $';
echo $NSE_VERSION

## Turn on verboseness if desired ##
if($?NMR_STD_VERBOSE) then
  set echo
  set verbose
endif

set VERSION = '$Id: nmr-std-env,v 1.2 2005/01/07 22:12:40 kteich Exp $';

## ------- Set up a working path ---------- ##
set path = ( . /bin /usr/bin /usr/local/bin /usr/bsd /usr/ucb )
rehash;

### -------  Print a warning if the user is inverse ----------- ###
if ( `whoami` == inverse ) then
  echo " "
  echo "WARNING: you are currently logged in as user 'inverse'.  This account"
  echo "will eventually be made unavaible to the general NMR community.  Please"
  echo "try logging in as yourself to process your data."
  echo " "
endif

# Operating system
setenv os `uname -s` 

setenv FREESURFER_HOME /space/lyon/1/fsdev/freesurfer_dev
setenv SUBJECTS_DIR    /space/sake/3/users/inverse/subjects
unsetenv NO_FSFAST
setenv FSFAST_HOME     /space/lyon/1/fsdev/freesurfer_dev/fsfast
unsetenv NO_MINC

setenv MINC_BIN_DIR /usr/pubsw/packages/mni/current/bin
setenv MINC_LIB_DIR /usr/pubsw/packages/mni/current/lib

# Source the FreeSurfer Environment File
set FS_ENV_FILE = $FREESURFER_HOME/FreeSurferEnv.csh
if(! -e $FS_ENV_FILE) then
  echo "ERROR: cannot find $FS_ENV_FILE"
  exit 1;
endif

source $FS_ENV_FILE

set this_shell    = `basename $SHELL`;
set this_hostname = `hostname` 
set this_host     = `basename $this_hostname .nmr.mgh.harvard.edu`

### Create a prompt to indicate the standard environment ###
if($this_shell == csh) then
  unalias cd
  alias cd  'set old=$cwd; chdir \!*; set tmpcwd = `basename $cwd`; set prompt = "$this_host"":$tmpcwd (nmr-std-env) % "'
  cd $cwd;
else
  set prompt = "[%m:%c] (nmr-std-env) "
endif

### Dont leave huge cores around ###
limit coredumpsize 0

### OS-Dependent Settings ###
switch($os)

  case "Linux":
    set path = ($path /usr/bin/X11)
    breaksw

  case "IRIX":
  case "IRIX64":
    set path = ($path /usr/bin/X11)
    breaksw

  case "SunOS":
    set path = ($path /usr/openwin/bin /usr/ucb);
    breaksw

endsw

## This is where emacs can be found on the suns ##
if(-d /usr/local/Gnu/bin ) then
  set path = ($path /usr/local/Gnu/bin )
endif

if(! $?MRI_UMASK) then
  setenv MRI_UMASK 2
endif

# necessary to unalias this stuff? 
#unalias df du ls;

# Add users bin directory #
if( -e ~/bin ) set path = ( $path ~/bin )


set path = ( $path /usr/sbin /sbin )

rehash;

unset echo ;
unset verbose;

exit 0;
####################################################################

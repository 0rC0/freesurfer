#!/bin/tcsh -f

#
# test_mris_anatomical_stats
#
# execute mris_anatomical_stats and check results against expected results
#
# Original Author: Nick Schmansky
# CVS Revision Info:
#    $Author: nicks $
#    $Date: 2008/02/26 16:01:48 $
#    $Revision: 1.6 $
#
# Copyright (C) 2007,
# The General Hospital Corporation (Boston, MA). 
# All rights reserved.
#
# Distribution, usage and copying of this software is covered under the
# terms found in the License Agreement file named 'COPYING' found in the
# FreeSurfer source code root directory, and duplicated here:
# https://surfer.nmr.mgh.harvard.edu/fswiki/FreeSurferOpenSourceLicense
#
# General inquiries: freesurfer@nmr.mgh.harvard.edu
# Bug reports: analysis-bugs@nmr.mgh.harvard.edu
#

set VERSION='$Id: test_mris_anatomical_stats,v 1.6 2008/02/26 16:01:48 nicks Exp $'

umask 002

setenv SUBJECTS_DIR $PWD

if ( $?SKIP_MRIS_ANAT_STATS_TEST ) then
  echo "skipping test_mris_anatomical_stats"
  exit 77
endif

if ( -e testdata2) then
  echo "rm -Rf testdata2"
  rm -Rf testdata2
endif

# use the testdata found in the mri_aparc2aseg directory

echo "gunzip -c ../mri_aparc2aseg/testdata2.tar.gz | tar xvf -"
gunzip -c ../mri_aparc2aseg/testdata2.tar.gz | tar xvf -


#
# test1: basic call sequence using rh
#
set cmd=( ./mris_anatomical_stats testdata2 rh )
echo ""
echo $cmd
$cmd >& test1.out
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif

# compare against prior known-good results
grep "=" test1.out > test1.observed
set cmd=(diff test1.expected test1.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif


#
# test2: repeat basic call sequence for lh, plus -log
#
set cmd=( ./mris_anatomical_stats -log test2_logfile.observed testdata2 lh )
echo ""
echo $cmd
$cmd >& test2.out
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif
grep "=" test2.out > test2.observed
set cmd=(diff test2.expected test2.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif
set cmd=(diff test2_logfile.expected test2_logfile.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif


#
# test3: exercise the -a aparc.annot and -f table options
#
set cmd=( ./mris_anatomical_stats -a aparc.annot -f test3.table \
            testdata2 rh )
echo ""
echo $cmd
$cmd >& test3.out
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif
grep -v "#" test3.table > test3.observed
set cmd=(diff test3.expected test3.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif


#
# test 4: exercise the -l .label and -f table options
#
set cmd=( ./mris_anatomical_stats -l rh.precentral.label -f test4.table \
            testdata2 rh )
echo ""
echo $cmd
$cmd >& test4.out
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif
grep -v "#" test4.table | grep precentral > test4.observed
set cmd=(diff test4.expected test4.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif


#
# test 5: compare the data for the precentral region produced by the 
# -a option (test3) against the -l option (test4).  a bug found by Mike 
# Harms of Wash. U. found these to be different (fixed 3 July 2007).
#
grep precentral test3.observed > test5.a.observed
sed 's/rh.precentral.label/precentral/g' test4.observed > test5.l.observed
echo ""
set cmd=(diff -b test5.a.observed test5.l.observed)
echo $cmd
$cmd
if ($status != 0) then
  echo "test_mris_anatomical_stats FAILED"
  exit 1
endif



#
# cleanup
#
rm -Rf testdata2 *.observed *.out *.table

echo ""
echo "test_mris_anatomical_stats passed all tests"
exit 0

-- -*- lua -*-

require "io"
require "os"
require( "tools.freesurfer" )
require( "gauss" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer


-- List of input MRI data
local inputFiles = { 'uchar-256-256-256.mgz', 'uchar-37-71-137.mgz',
		     'short-256-256-256.mgz', 'short-37-71-137.mgz',
		     'float-256-256-256.mgz', 'float-37-71-137.mgz', }
-- Kernel sizes to use
local sigmaVals = gauss.sigmaVals



-- Function to turn an input filename and gaussian sigma into a test name
local function testName( input, sigma )
   local inputItems = FS.split( input, "-" )

   return inputItems[1].."-"..inputItems[2].."-"..sigma
end



-- Function to generate a list of tests
local function testGen( inputs, sigmas, tol )
   local testTable = {}

   -- inputs is a table of input file names
   -- sigmas is a table of gaussian sigmas
   -- tol is the tolerance for mri_diff
   -- Generates nInputs*nSigmas tests

   for i,input in ipairs(inputs) do
      for s,sigma in ipairs(sigmas) do
	 local tName = testName( input, sigma )
	 table.insert( testTable, { id=tName, tol=tol, input=input, sigma=sigma } )
      end
   end

   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 A set of tests for the gaussian convolutions
   ]],

   -- Keywords (for subtest selection)
   keywords = { "convolution", "basic", "mri" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "Gaussian_Convolution_Test",

   -- The script to run the test case
   runScript = gauss.script,

   -- The list of tests to run
   tests = testGen( inputFiles, sigmaVals, 1e0 )
  
}
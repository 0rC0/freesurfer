-- -*- lua -*-


require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer


-- List of input MRI data
local inputFiles = { 'uchar-256-256-256.mgz', 'uchar-37-71-137.mgz',
		     'short-256-256-256.mgz', 'short-37-71-137.mgz',
		     'float-256-256-256.mgz', 'float-37-71-137.mgz', }
local transformFiles = { "translation1.fsl", "translation2.fsl",
			 "transform1.fsl" }
local outputPrecisions = { "uchar", "short", "float", }
local interpModes = { "trilin", "nearest", }


-- Function to turn test parameters into a test name
local function testName( input, transform, precision, mode )
   local inputItems = FS.split( input, "-" )
   local transformItems = FS.split( transform, "%." )

   local myName = inputItems[1].."-"..inputItems[2]
   myName = myName.."-"..transformItems[1]
   myName = myName.."-"..precision.."Out"
   myName = myName.."-"..mode

   return myName
end



-- Function to generate a list of tests
local function testGen( inputs, transforms, precisions, interps )
   local testTable = {}

   -- inputs is a table of input file names
   -- transform is a table of transform matrix names
   -- precisions is a table of output precisions
   -- interps is a table of interpolation modes

   for i,input in ipairs(inputs) do
      for p,precision in ipairs(precisions) do
	 for t,transform in ipairs(transforms) do
	    for im,interp in ipairs(interps) do
	       local tName = testName( input, transform, precision, interp )
	       table.insert( testTable, { id=tName,
					  input=input,
					  transform=transform,
					  outputPrecision=precision,
					  interp=interp } )
	    end
	 end
      end
   end

   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 A set of tests for the MRI vol2vol routine
   ]],

   -- Keywords (for subtest selection)
   keywords = { "basic", "mri" },

   -- Designate the test as active
   active = 0,

   -- The test name
   testName = "MRI_vol2vol_Test",

   -- The script to run the test case
   runScript = [[
	 export MAINCMDS=" --mov $(projectDir)/inputs/$(input) --targ $(projectDir)/inputs/$(input) --fsl $(testDir)/$(transform) --interp $(interp) --precision $(outputPrecision)"
	 export CPUOUT="$(outputDir)/$(id).cpu.mgz"
	 export GPUOUT="$(outputDir)/$(id).gpu.mgz"

	 mri_vol2vol $MAINCMDS \--o $CPUOUT
	 mri_vol2vol_cuda $MAINCMDS \--o $GPUOUT

	 $(projectDir)/tools/mridiff.pl \--results=$(cmdResultFn) \
                                        \--gold=$CPUOUT \
                                        \--test=$GPUOUT \
                                        \--threshold=1.0
	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( inputFiles, transformFiles, outputPrecisions, interpModes )
  
}
-- -*- lua -*-

local inputFiles = { 'uchar-256-256-256.mgz', 'uchar-37-71-137.mgz',
		     'short-256-256-256.mgz', 'short-37-71-137.mgz',
		     'float-256-256-256.mgz', 'float-37-71-137.mgz', }
local widthVals = { 1, 3, 17 }

-- From lua-users wiki
function split(str, pat)
   local t = {}  -- NOTE: use {n = 0} in Lua-5.0
   local fpat = "(.-)" .. pat
   local last_end = 1
   local s, e, cap = str:find(fpat, 1)
   while s do
      if s ~= 1 or cap ~= "" then
	 table.insert(t,cap)
      end
      last_end = e+1
      s, e, cap = str:find(fpat, last_end)
   end
   if last_end <= #str then
      cap = str:sub(last_end)
      table.insert(t, cap)
   end
   return t
end


-- Function to turn an input filename and mean width into a test name
local function testName( input, width )
   local inputItems = split( input, "-" )

   return inputItems[1].."-"..inputItems[2].."-"..width
end



-- Function to generate a list of tests
local function testGen( inputs, widths, tol )
   local testTable = {}

   -- inputs is a table of input file names
   -- widthss is a table of mean filter widths
   -- tol is the tolerance for mri_diff
   -- Generates nInputs*nWidths tests

   for i,input in ipairs(inputs) do
      for w,width in ipairs(widths) do
	 local tName = testName( input, width )
	 table.insert( testTable, { id=tName, tol=tol, input=input, width=width } )
      end
   end

   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 A set of tests for the MRI mean filter
   ]],

   -- Keywords (for subtest selection)
   keywords = { "convolution","basic" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "MRI_Mean_Test",

   -- The script to run the test case
   runScript = [[
	 export MAINCMDS=" --input=$(projectDir)/inputs/$(input) --width=$(width) --repeats=1"
	 export CPUOUT="$(outputDir)/$(id).cpu.mgz"
	 export GPUOUT="$(outputDir)/$(id).gpu.mgz"

	 meanfilter_test $MAINCMDS \--output=$CPUOUT
	 meanfilter_test_cuda $MAINCMDS \--output=$GPUOUT

	 $(projectDir)/bin/mridiff.pl \--results=$(cmdResultFn) \--gold=$CPUOUT \--test=$GPUOUT \--threshold=$(tol)
	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( inputFiles, widthVals, 1e0 )
  
}